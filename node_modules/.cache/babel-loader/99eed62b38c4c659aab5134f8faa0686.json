{"ast":null,"code":"var _jsxFileName = \"/Users/lequocvinh/MathSolver/mathSolverVN/src/container/Message/MessagePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport ChatWindow from './ChatWindow';\nimport MessageDisscution from './MessageDisscution';\nimport './MessagePage.scss';\nimport { createNewRoom, listRoomOfUser } from '../../services/userService';\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nfunction MessagePage(props) {\n  _s();\n\n  const [dataRoom, setdataRoom] = useState([]);\n  const [selectedRoom, setselectedRoom] = useState('');\n  const [dataUser, setdataUser] = useState({});\n  const host = process.env.REACT_APP_BACKEND_URL;\n  const socketRef = useRef();\n  const [id, setId] = useState(); //Vinh đóng socket\n  // useEffect(()=>{\n  //   socketRef.current = socketIOClient.connect(host)\n  //   const userData = JSON.parse(localStorage.getItem('userData'));\n  //   setdataUser(userData)\n  //   let createRoom = async()=>{\n  //    let res = await createNewRoom({\n  //       userId1:userData.id\n  //     })\n  //     if(res && res.errCode){\n  //       fetchListRoom(userData.id)\n  //     }\n  //   }\n  //   if(userData){\n  //     socketRef.current.on('getId', data => {\n  //       setId(data)\n  //     }) // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\n  //     createRoom()\n  //     fetchListRoom(userData.id)\n  //  socketRef.current.on('sendDataServer', dataGot => {\n  //     fetchListRoom(userData.id)\n  //     }) \n  //     socketRef.current.on('loadRoomServer', dataGot => {\n  //       fetchListRoom(userData.id)\n  //       }) \n  //     return () => {\n  //       socketRef.current.disconnect();\n  //     };\n  //   }\n  // },[])\n\n  let handleClickRoom = roomId => {\n    socketRef.current.emit('loadRoomClient');\n    setselectedRoom(roomId);\n  };\n\n  let fetchListRoom = async userId => {\n    let res = await listRoomOfUser(userId);\n\n    if (res && res.errCode == 0) {\n      setdataRoom(res.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ks-page-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ks-page-content-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ks-messenger\",\n          children: [/*#__PURE__*/_jsxDEV(MessageDisscution, {\n            userId: dataUser.id,\n            isAdmin: false,\n            handleClickRoom: handleClickRoom,\n            data: dataRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 18\n          }, this), selectedRoom ? /*#__PURE__*/_jsxDEV(ChatWindow, {\n            userId: dataUser.id,\n            roomId: selectedRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Ch\\u01B0a ch\\u1ECDn ph\\xF2ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MessagePage, \"4VPq205cVq3C4eaUDVMl2+kToks=\");\n\n_c = MessagePage;\nexport default MessagePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagePage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","ChatWindow","MessageDisscution","createNewRoom","listRoomOfUser","socketIOClient","require","config","MessagePage","props","dataRoom","setdataRoom","selectedRoom","setselectedRoom","dataUser","setdataUser","host","process","env","REACT_APP_BACKEND_URL","socketRef","id","setId","handleClickRoom","roomId","current","emit","fetchListRoom","userId","res","errCode","data"],"sources":["/Users/lequocvinh/MathSolver/mathSolverVN/src/container/Message/MessagePage.js"],"sourcesContent":["import React, { useEffect, useState,useRef } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport ChatWindow from './ChatWindow';\r\nimport MessageDisscution from './MessageDisscution';\r\nimport './MessagePage.scss';\r\nimport {createNewRoom,listRoomOfUser} from '../../services/userService';\r\nimport socketIOClient from \"socket.io-client\";\r\nrequire('dotenv').config();\r\nfunction MessagePage(props) {\r\n  const [dataRoom, setdataRoom] = useState([])\r\n  const [selectedRoom, setselectedRoom] = useState('')\r\n  const [dataUser, setdataUser] = useState({})\r\n  const host = process.env.REACT_APP_BACKEND_URL;\r\n  const socketRef = useRef();\r\n  const [id, setId] = useState();\r\n\r\n  //Vinh đóng socket\r\n  // useEffect(()=>{\r\n  //   socketRef.current = socketIOClient.connect(host)\r\n  //   const userData = JSON.parse(localStorage.getItem('userData'));\r\n  //   setdataUser(userData)\r\n  //   let createRoom = async()=>{\r\n  //    let res = await createNewRoom({\r\n  //       userId1:userData.id\r\n  //     })\r\n  //     if(res && res.errCode){\r\n  //       fetchListRoom(userData.id)\r\n  //     }\r\n  //   }\r\n  //   if(userData){\r\n  //     socketRef.current.on('getId', data => {\r\n  //       setId(data)\r\n  //     }) // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\r\n  //     createRoom()\r\n  \r\n  \r\n      \r\n  //     fetchListRoom(userData.id)\r\n  \r\n  //  socketRef.current.on('sendDataServer', dataGot => {\r\n  //     fetchListRoom(userData.id)\r\n  //     }) \r\n  //     socketRef.current.on('loadRoomServer', dataGot => {\r\n  //       fetchListRoom(userData.id)\r\n  //       }) \r\n  //     return () => {\r\n  //       socketRef.current.disconnect();\r\n  //     };\r\n  //   }\r\n   \r\n\r\n  // },[])\r\n let handleClickRoom = (roomId)=>{\r\n  \r\n  socketRef.current.emit('loadRoomClient')\r\n    setselectedRoom(roomId)\r\n    \r\n }\r\n let fetchListRoom = async(userId) =>{\r\n  let res = await listRoomOfUser(userId)\r\n  if(res && res.errCode==0){\r\n    setdataRoom(res.data)\r\n  }\r\n}\r\n    return (\r\n\r\n        <div className=\"container\">\r\n        <div className=\"ks-page-content\">\r\n          <div className=\"ks-page-content-body\">\r\n            <div className=\"ks-messenger\">\r\n                 <MessageDisscution userId={dataUser.id} isAdmin={false} handleClickRoom={handleClickRoom} data={dataRoom}/>\r\n                 {selectedRoom ? <ChatWindow userId={dataUser.id} roomId={selectedRoom}  />\r\n                 :<div>\r\n                    <span className='title'>Chưa chọn phòng</span>\r\n                 </div> \r\n                }\r\n                \r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MessagePage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,MAApC,QAAkD,OAAlD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,oBAAP;AACA,SAAQC,aAAR,EAAsBC,cAAtB,QAA2C,4BAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EAC1B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMkB,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAzB;EACA,MAAMC,SAAS,GAAGrB,MAAM,EAAxB;EACA,MAAM,CAACsB,EAAD,EAAKC,KAAL,IAAcxB,QAAQ,EAA5B,CAN0B,CAQ1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;;EACD,IAAIyB,eAAe,GAAIC,MAAD,IAAU;IAE/BJ,SAAS,CAACK,OAAV,CAAkBC,IAAlB,CAAuB,gBAAvB;IACEb,eAAe,CAACW,MAAD,CAAf;EAEF,CALD;;EAMA,IAAIG,aAAa,GAAG,MAAMC,MAAN,IAAgB;IACnC,IAAIC,GAAG,GAAG,MAAMzB,cAAc,CAACwB,MAAD,CAA9B;;IACA,IAAGC,GAAG,IAAIA,GAAG,CAACC,OAAJ,IAAa,CAAvB,EAAyB;MACvBnB,WAAW,CAACkB,GAAG,CAACE,IAAL,CAAX;IACD;EACF,CALA;;EAMG,oBAEI;IAAK,SAAS,EAAC,WAAf;IAAA,uBACA;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,sBAAf;QAAA,uBACE;UAAK,SAAS,EAAC,cAAf;UAAA,wBACK,QAAC,iBAAD;YAAmB,MAAM,EAAEjB,QAAQ,CAACO,EAApC;YAAwC,OAAO,EAAE,KAAjD;YAAwD,eAAe,EAAEE,eAAzE;YAA0F,IAAI,EAAEb;UAAhG;YAAA;YAAA;YAAA;UAAA,QADL,EAEME,YAAY,gBAAG,QAAC,UAAD;YAAY,MAAM,EAAEE,QAAQ,CAACO,EAA7B;YAAiC,MAAM,EAAET;UAAzC;YAAA;YAAA;YAAA;UAAA,QAAH,gBACZ;YAAA,uBACE;cAAM,SAAS,EAAC,OAAhB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAHN;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAoBH;;GA5EQJ,W;;KAAAA,W;AA8ET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}