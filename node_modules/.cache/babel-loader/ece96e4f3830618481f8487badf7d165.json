{"ast":null,"code":"\"use strict\";\n\nif (typeof Object.assign !== \"function\") {\n  Object.assign = function (target) {\n    if (!target) {\n      throw TypeError(\"Cannot convert undefined or null to object\");\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    for (const source of args) {\n      if (source) {\n        Object.keys(source).forEach(key => target[key] = source[key]);\n      }\n    }\n\n    return target;\n  };\n}","map":{"version":3,"names":["Object","assign","target","TypeError","args","source","keys","forEach","key"],"sources":["/Users/lequocvinh/MathSolver/mathSolverVN/node_modules/flatpickr/dist/esm/utils/polyfills.js"],"sourcesContent":["\"use strict\";\nif (typeof Object.assign !== \"function\") {\n    Object.assign = function (target, ...args) {\n        if (!target) {\n            throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n        for (const source of args) {\n            if (source) {\n                Object.keys(source).forEach((key) => (target[key] = source[key]));\n            }\n        }\n        return target;\n    };\n}\n"],"mappings":"AAAA;;AACA,IAAI,OAAOA,MAAM,CAACC,MAAd,KAAyB,UAA7B,EAAyC;EACrCD,MAAM,CAACC,MAAP,GAAgB,UAAUC,MAAV,EAA2B;IACvC,IAAI,CAACA,MAAL,EAAa;MACT,MAAMC,SAAS,CAAC,4CAAD,CAAf;IACH;;IAHsC,kCAANC,IAAM;MAANA,IAAM;IAAA;;IAIvC,KAAK,MAAMC,MAAX,IAAqBD,IAArB,EAA2B;MACvB,IAAIC,MAAJ,EAAY;QACRL,MAAM,CAACM,IAAP,CAAYD,MAAZ,EAAoBE,OAApB,CAA6BC,GAAD,IAAUN,MAAM,CAACM,GAAD,CAAN,GAAcH,MAAM,CAACG,GAAD,CAA1D;MACH;IACJ;;IACD,OAAON,MAAP;EACH,CAVD;AAWH"},"metadata":{},"sourceType":"script"}