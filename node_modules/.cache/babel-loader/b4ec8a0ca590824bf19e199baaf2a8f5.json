{"ast":null,"code":"import { repeat } from './tool'; // 最简单的Decorator，即在现有文字的基础上加上前缀、后缀即可\n\nvar SIMPLE_DECORATOR = {\n  bold: ['**', '**'],\n  italic: ['*', '*'],\n  underline: ['++', '++'],\n  strikethrough: ['~~', '~~'],\n  quote: ['\\n> ', '\\n'],\n  inlinecode: ['`', '`'],\n  code: ['\\n```\\n', '\\n```\\n']\n}; // 插入H1-H6\n\nfor (var i = 1; i <= 6; i++) {\n  SIMPLE_DECORATOR[\"h\" + i] = [\"\\n\" + repeat('#', i) + \" \", '\\n'];\n}\n\nfunction decorateTableText(option) {\n  var _option$row = option.row,\n      row = _option$row === void 0 ? 2 : _option$row,\n      _option$col = option.col,\n      col = _option$col === void 0 ? 2 : _option$col;\n  var rowHeader = ['|'];\n  var rowData = ['|'];\n  var rowDivision = ['|'];\n  var colStr = '';\n\n  for (var _i = 1; _i <= col; _i++) {\n    rowHeader.push(' Head |');\n    rowDivision.push(' --- |');\n    rowData.push(' Data |');\n  }\n\n  for (var j = 1; j <= row; j++) {\n    colStr += '\\n' + rowData.join('');\n  }\n\n  return rowHeader.join('') + \"\\n\" + rowDivision.join('') + colStr;\n}\n\nfunction decorateList(type, target) {\n  var text = target;\n\n  if (text.substr(0, 1) !== '\\n') {\n    text = '\\n' + text;\n  }\n\n  if (type === 'unordered') {\n    return text.length > 1 ? text.replace(/\\n/g, '\\n* ').trim() : '* ';\n  } else {\n    var count = 1;\n\n    if (text.length > 1) {\n      return text.replace(/\\n/g, function () {\n        return \"\\n\" + count++ + \". \";\n      }).trim();\n    } else {\n      return '1. ';\n    }\n  }\n}\n\nfunction createTextDecorated(text, newBlock) {\n  return {\n    text: text,\n    newBlock: newBlock,\n    selection: {\n      start: text.length,\n      end: text.length\n    }\n  };\n}\n/**\n * 获取装饰后的Markdown文本\n * @param target 原文字\n * @param type 装饰类型\n * @param option 附加参数\n * @returns {Decorated}\n */\n\n\nfunction getDecorated(target, type, option) {\n  if (typeof SIMPLE_DECORATOR[type] !== 'undefined') {\n    return {\n      text: \"\" + SIMPLE_DECORATOR[type][0] + target + SIMPLE_DECORATOR[type][1],\n      selection: {\n        start: SIMPLE_DECORATOR[type][0].length,\n        end: SIMPLE_DECORATOR[type][0].length + target.length\n      }\n    };\n  }\n\n  switch (type) {\n    case 'tab':\n      var inputValue = option.tabMapValue === 1 ? '\\t' : ' '.repeat(option.tabMapValue);\n      var newSelectedText = inputValue + target.replace(/\\n/g, \"\\n\" + inputValue);\n      var lineBreakCount = target.includes('\\n') ? target.match(/\\n/g).length : 0;\n      return {\n        text: newSelectedText,\n        selection: {\n          start: option.tabMapValue,\n          end: option.tabMapValue * (lineBreakCount + 1) + target.length\n        }\n      };\n\n    case 'unordered':\n      return createTextDecorated(decorateList('unordered', target), true);\n\n    case 'order':\n      return createTextDecorated(decorateList('order', target), true);\n\n    case 'hr':\n      return createTextDecorated('---', true);\n\n    case 'table':\n      return {\n        text: decorateTableText(option),\n        newBlock: true\n      };\n\n    case 'image':\n      return {\n        text: \"![\" + (target || option.target) + \"](\" + (option.imageUrl || '') + \")\",\n        selection: {\n          start: 2,\n          end: target.length + 2\n        }\n      };\n\n    case 'link':\n      return {\n        text: \"[\" + target + \"](\" + (option.linkUrl || '') + \")\",\n        selection: {\n          start: 1,\n          end: target.length + 1\n        }\n      };\n  }\n\n  return {\n    text: target,\n    selection: {\n      start: 0,\n      end: target.length\n    }\n  };\n}\n\nexport default getDecorated;","map":{"version":3,"names":["repeat","SIMPLE_DECORATOR","bold","italic","underline","strikethrough","quote","inlinecode","code","i","decorateTableText","option","_option$row","row","_option$col","col","rowHeader","rowData","rowDivision","colStr","_i","push","j","join","decorateList","type","target","text","substr","length","replace","trim","count","createTextDecorated","newBlock","selection","start","end","getDecorated","inputValue","tabMapValue","newSelectedText","lineBreakCount","includes","match","imageUrl","linkUrl"],"sources":["/Users/lequocvinh/MathSolver/mathSolverVN/node_modules/react-markdown-editor-lite/esm/utils/decorate.js"],"sourcesContent":["import { repeat } from './tool';\n// 最简单的Decorator，即在现有文字的基础上加上前缀、后缀即可\nvar SIMPLE_DECORATOR = {\n  bold: ['**', '**'],\n  italic: ['*', '*'],\n  underline: ['++', '++'],\n  strikethrough: ['~~', '~~'],\n  quote: ['\\n> ', '\\n'],\n  inlinecode: ['`', '`'],\n  code: ['\\n```\\n', '\\n```\\n']\n}; // 插入H1-H6\n\nfor (var i = 1; i <= 6; i++) {\n  SIMPLE_DECORATOR[\"h\" + i] = [\"\\n\" + repeat('#', i) + \" \", '\\n'];\n}\n\nfunction decorateTableText(option) {\n  var _option$row = option.row,\n      row = _option$row === void 0 ? 2 : _option$row,\n      _option$col = option.col,\n      col = _option$col === void 0 ? 2 : _option$col;\n  var rowHeader = ['|'];\n  var rowData = ['|'];\n  var rowDivision = ['|'];\n  var colStr = '';\n\n  for (var _i = 1; _i <= col; _i++) {\n    rowHeader.push(' Head |');\n    rowDivision.push(' --- |');\n    rowData.push(' Data |');\n  }\n\n  for (var j = 1; j <= row; j++) {\n    colStr += '\\n' + rowData.join('');\n  }\n\n  return rowHeader.join('') + \"\\n\" + rowDivision.join('') + colStr;\n}\n\nfunction decorateList(type, target) {\n  var text = target;\n\n  if (text.substr(0, 1) !== '\\n') {\n    text = '\\n' + text;\n  }\n\n  if (type === 'unordered') {\n    return text.length > 1 ? text.replace(/\\n/g, '\\n* ').trim() : '* ';\n  } else {\n    var count = 1;\n\n    if (text.length > 1) {\n      return text.replace(/\\n/g, function () {\n        return \"\\n\" + count++ + \". \";\n      }).trim();\n    } else {\n      return '1. ';\n    }\n  }\n}\n\nfunction createTextDecorated(text, newBlock) {\n  return {\n    text: text,\n    newBlock: newBlock,\n    selection: {\n      start: text.length,\n      end: text.length\n    }\n  };\n}\n/**\n * 获取装饰后的Markdown文本\n * @param target 原文字\n * @param type 装饰类型\n * @param option 附加参数\n * @returns {Decorated}\n */\n\n\nfunction getDecorated(target, type, option) {\n  if (typeof SIMPLE_DECORATOR[type] !== 'undefined') {\n    return {\n      text: \"\" + SIMPLE_DECORATOR[type][0] + target + SIMPLE_DECORATOR[type][1],\n      selection: {\n        start: SIMPLE_DECORATOR[type][0].length,\n        end: SIMPLE_DECORATOR[type][0].length + target.length\n      }\n    };\n  }\n\n  switch (type) {\n    case 'tab':\n      var inputValue = option.tabMapValue === 1 ? '\\t' : ' '.repeat(option.tabMapValue);\n      var newSelectedText = inputValue + target.replace(/\\n/g, \"\\n\" + inputValue);\n      var lineBreakCount = target.includes('\\n') ? target.match(/\\n/g).length : 0;\n      return {\n        text: newSelectedText,\n        selection: {\n          start: option.tabMapValue,\n          end: option.tabMapValue * (lineBreakCount + 1) + target.length\n        }\n      };\n\n    case 'unordered':\n      return createTextDecorated(decorateList('unordered', target), true);\n\n    case 'order':\n      return createTextDecorated(decorateList('order', target), true);\n\n    case 'hr':\n      return createTextDecorated('---', true);\n\n    case 'table':\n      return {\n        text: decorateTableText(option),\n        newBlock: true\n      };\n\n    case 'image':\n      return {\n        text: \"![\" + (target || option.target) + \"](\" + (option.imageUrl || '') + \")\",\n        selection: {\n          start: 2,\n          end: target.length + 2\n        }\n      };\n\n    case 'link':\n      return {\n        text: \"[\" + target + \"](\" + (option.linkUrl || '') + \")\",\n        selection: {\n          start: 1,\n          end: target.length + 1\n        }\n      };\n  }\n\n  return {\n    text: target,\n    selection: {\n      start: 0,\n      end: target.length\n    }\n  };\n}\n\nexport default getDecorated;"],"mappings":"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"},"metadata":{},"sourceType":"module"}