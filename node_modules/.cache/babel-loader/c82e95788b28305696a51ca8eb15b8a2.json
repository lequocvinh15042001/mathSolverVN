{"ast":null,"code":"import axios from 'axios';\nimport _ from 'lodash';\n\nrequire('dotenv').config();\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL //  withCredentials: true\n\n}); // Vinh đóng axios\n\nif (localStorage.getItem(\"token\")) {\n  instance.interceptors.request.use(config => {\n    config.headers.authorization = \"Bearer \" + localStorage.getItem(\"token\").replaceAll('\"', '');\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n} // instance.interceptors.response.use(\n//     (res) => {\n//       return res;\n//     },\n//     async (err) => {\n//       const originalConfig = err.config;\n//       if (originalConfig.url !== \"/login\" && err.response) {\n//         // Access Token was expired\n//         if (err.response.status === 500 &&err.response.data.message.includes(\"expired\") && !originalConfig._retry) {\n//           originalConfig._retry = true;\n//           try {\n//             let refreshtoken = localStorage.getItem(\"refreshtoken\")\n//             localStorage.setItem(\"token\",refreshtoken)\n//             return instance(originalConfig);\n//           } catch (_error) {\n//             return Promise.reject(_error);\n//           }\n//         }\n//       }\n//       return Promise.reject(err);\n//     }\n//   );\n// Vinh tạo lại để sửa lỗi CORS\n// instance.interceptors.request.use((config) => { //tất cả request đều phải qua đây \n//     const user = localStorage.getItem('user');\n//     if (user) { // nếu có đăng nhập thì thực hiện\n//       const { accessToken } = JSON.parse(user)\n//       config.headers.common.Authorization = `Bearer ${accessToken}`;\n//       // console.log(accessToken);\n//     }\n//     return config;\n//   })\n\n\ninstance.interceptors.response.use(response => {\n  // Thrown error for request with OK status code\n  const {\n    data\n  } = response;\n  return response.data;\n}); // console.log('====================================');\n// console.log(\"API: \", process.env.REACT_APP_BACKEND_URL);\n// console.log('====================================');\n\nexport default instance;","map":{"version":3,"names":["axios","_","require","config","instance","create","baseURL","process","env","REACT_APP_BACKEND_URL","localStorage","getItem","interceptors","request","use","headers","authorization","replaceAll","error","Promise","reject","response","data"],"sources":["/Users/lequocvinh/MathSolver/mathSolverVN/src/axios.js"],"sourcesContent":["import axios from 'axios';\r\nimport _ from 'lodash';\r\nrequire('dotenv').config();\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    //  withCredentials: true\r\n});\r\n\r\n// Vinh đóng axios\r\nif (localStorage.getItem(\"token\")) {\r\n    instance.interceptors.request.use(\r\n        config => {\r\n            config.headers.authorization = \"Bearer \" + localStorage.getItem(\"token\").replaceAll('\"', '')\r\n\r\n            return config\r\n        },\r\n        error => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n}\r\n\r\n\r\n\r\n// instance.interceptors.response.use(\r\n//     (res) => {\r\n//       return res;\r\n//     },\r\n//     async (err) => {\r\n//       const originalConfig = err.config;\r\n//       if (originalConfig.url !== \"/login\" && err.response) {\r\n\r\n//         // Access Token was expired\r\n//         if (err.response.status === 500 &&err.response.data.message.includes(\"expired\") && !originalConfig._retry) {\r\n//           originalConfig._retry = true;\r\n//           try {\r\n//             let refreshtoken = localStorage.getItem(\"refreshtoken\")\r\n//             localStorage.setItem(\"token\",refreshtoken)\r\n//             return instance(originalConfig);\r\n//           } catch (_error) {\r\n//             return Promise.reject(_error);\r\n//           }\r\n//         }\r\n//       }\r\n//       return Promise.reject(err);\r\n//     }\r\n//   );\r\n\r\n\r\n// Vinh tạo lại để sửa lỗi CORS\r\n// instance.interceptors.request.use((config) => { //tất cả request đều phải qua đây \r\n//     const user = localStorage.getItem('user');\r\n//     if (user) { // nếu có đăng nhập thì thực hiện\r\n//       const { accessToken } = JSON.parse(user)\r\n//       config.headers.common.Authorization = `Bearer ${accessToken}`;\r\n//       // console.log(accessToken);\r\n//     }\r\n//     return config;\r\n//   })\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return response.data\r\n    }\r\n);\r\n\r\n// console.log('====================================');\r\n// console.log(\"API: \", process.env.REACT_APP_BACKEND_URL);\r\n// console.log('====================================');\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;EAC1BC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADK,CAE1B;;AAF0B,CAAb,CAAjB,C,CAKA;;AACA,IAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;EAC/BP,QAAQ,CAACQ,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACIX,MAAM,IAAI;IACNA,MAAM,CAACY,OAAP,CAAeC,aAAf,GAA+B,YAAYN,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BM,UAA9B,CAAyC,GAAzC,EAA8C,EAA9C,CAA3C;IAEA,OAAOd,MAAP;EACH,CALL,EAMIe,KAAK,IAAI;IACL,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;EACH,CARL;AAUH,C,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAd,QAAQ,CAACQ,YAAT,CAAsBS,QAAtB,CAA+BP,GAA/B,CACKO,QAAD,IAAc;EACV;EACA,MAAM;IAAEC;EAAF,IAAWD,QAAjB;EACA,OAAOA,QAAQ,CAACC,IAAhB;AACH,CALL,E,CAQA;AACA;AACA;;AACA,eAAelB,QAAf"},"metadata":{},"sourceType":"module"}